---
import Card, { CardProps } from "../card/card.astro";
import CardHeader from "../card/header.astro";
import CardTitle from "../card/title.astro";
import CardContent from "../card/content.astro";
import Progress from "../core/progress.astro";

import { GetProposalResultsResult } from "../../../common/store";

interface Props extends CardProps {
    total: GetProposalResultsResult['total_stake_weight'];
    positive: GetProposalResultsResult['positive_stake_weight'];
    negative: GetProposalResultsResult['negative_stake_weight'];
}

const { total, positive, negative, className } = Astro.props as Props;

const positivePercentage = total > 0 ? ((positive / total) * 100).toFixed(4).replace(/\.0+$/, '') : '0';
const negativePercentage = total > 0 ? ((negative / total) * 100).toFixed(4).replace(/\.0+$/, '') : '0';
---
<Card className={className}>
    <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-0.5">
        <CardTitle>Voting Results</CardTitle>
        <span class="text-xs text-muted-foreground">Voting has ended</span>
    </CardHeader>
    <CardContent className="card-content flex flex-col gap-1.5 mt-1.5">
        <Progress className="h-5 rounded-md" value={Number.parseFloat(positivePercentage)} />
        <div class="flex justify-between items-center">
        <p class="text-xs text-muted-foreground font-medium">FOR - {positivePercentage}%</p>
        <p class="text-xs text-muted-foreground font-medium">AGAINST - {negativePercentage}%</p>
        </div>
    </CardContent>
</Card>