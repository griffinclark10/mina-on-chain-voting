---
import TableHeader from './header.astro'
import Title from './cols/proposal/title.astro';
import Key from './cols/proposal/key.astro';
import Status from './cols/proposal/status.astro';
import Timestamp from './cols/proposal/timestamp.astro';
import Results from './cols/proposal/results.astro';
import Toolbar from './toolbar/toolbar.astro';
import  Pagination from './pagination.astro';

import { rows } from '../../../common/fakedata';
import {currentPage, numPages, visibleRows} from '../ts/pagination';

const updateDisplayedRows = (currentPage?: number) => {
  // Default to page 1 if currentPage is undefined
  const effectivePage = currentPage ?? 1;
  const itemsPerPage = 10;
  const start = (effectivePage - 1) * itemsPerPage;
  const end = start + itemsPerPage;
  // console.log("Start, end: ", start, end)
  visibleRows.set(rows.slice(start, end))
};

const handlePageChange = (pageNumber: number) => {
        alert(`Page changed to ${pageNumber}`)
        currentPage.set(pageNumber);
        console.log(`Current page is now ${currentPage.value}`)
    };
// const rowValue: number = currentPage.value ? currentPage.value : 1;
currentPage.subscribe((value) => {
  console.log(value)
  updateDisplayedRows(value)
})

---
<div class="space-y-4">
  <Toolbar proposal={true}/>
  <div class="border border-secondary rounded-lg w-full overflow-x-scroll overflow-y-visible">
    <table class="w-full caption-bottom text-sm" id="data-table" data-page={currentPage}>
      <TableHeader proposal={true}/>
      <tbody class="[&_tr:last-child]:border-0">
        {visibleRows.value?.map((row) => (
          <tr class="border-b border-secondary transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
            <Key key={row.key}/>
            <Title title={row.title} category={row.category}/>
            <Status status={row.status}/>
            <Timestamp time={row.votingStart} proposal={true}/>
            <Timestamp time={row.votingEnd} proposal={true}/>
            <Results status={row.status} id={row.key} />
          </tr>
        ))}
      </tbody>
    </table>
  </div>
  <Pagination/>
</div>

<script define:vars={{currentPage}}>
  
  document.getElementById('btn1').addEventListener('click', () => testFunction());

  const testFunction = () => {
    try {
      currentPage.set(1);
      alert("Current page is now 1")
    } catch (e) {
      alert("Error: " + e);
    }
  }
</script>