---
import { buttonVariants } from '../ts/buttonVariants';
import { cn } from '../../../common/utils';
import * as Icon from '@astropub/icons';

import { currentPage, numPages } from '../ts/pagination';

const disabled: Boolean = numPages.value === 1 ? true : false;

---
<div class="flex items-center justify-between px-2 flex-row">
    <div id="page-indicator" class="flex-1 text-sm text-muted-foreground">
        Page {currentPage.value} of {numPages.value}
    </div>
    <div class="flex items-center space-x-6">
        <div class="flex items-center space-x-2">
            <button 
                id="first-page"
                class={cn(
                buttonVariants({variant: 'outline',}),
                'h-8 w-8 p-0 hidden lg:flex')}
                disabled={disabled}
=            >
                <span class="sr-only">Go to first page</span>
                <Icon.DoubleArrowLeft class="h-4 w-4" />
            </button> 
            <button 
                id="prev-page"
                class={cn(
                buttonVariants({variant: 'outline',}),
                'h-8 w-8 p-0 lg:flex')}
                disabled={disabled}
            >
                <span class="sr-only">Go to first page</span>
                <Icon.ChevronLeft class="h-4 w-4" />
            </button> 
            <button 
                id="next-page"
                class={cn(
                buttonVariants({variant: 'outline',}),
                'h-8 w-8 p-0 lg:flex')}
                disabled={disabled}
            >
                <span class="sr-only">Go to first page</span>
                <Icon.ChevronRight class="h-4 w-4" />
            </button> 
            <button 
                id="last-page"
                class={cn(
                buttonVariants({variant: 'outline',}),
                'h-8 w-8 p-0 hidden lg:flex')}
                disabled={disabled}
            >
                <span class="sr-only">Go to first page</span>
                <Icon.DoubleArrowRight class="h-4 w-4" />
            </button> 
        </div>
    </div>
</div>

<script type="module" define:vars={{currentPage, numPages}}>

    function goToPage(pageNumber) {
        try {
            console.log("goToPage initially called");
            if (pageNumber < 1 || pageNumber > numPages.value) {
                return;
            }
            // alert("goToPage correctly called: " + pageNumber);
            currentPage.set(pageNumber);
        } catch (error) {
            alert("Error setting currentPage: " + error + "!!!");
        }
    }

    const updatePageIndicator = () => {
        document.getElementById('page-indicator').textContent = `Page ${$currentPage.value} of ${$numPages.value}`;
    };

    document.getElementById('first-page').addEventListener('click', () => {goToPage(1)});
    document.getElementById('prev-page').addEventListener('click', () => goToPage(currentPage.value - 1));
    document.getElementById('next-page').addEventListener('click', () => goToPage(currentPage.value + 1));
    document.getElementById('last-page').addEventListener('click', () => goToPage(numPages.value));
</script>
